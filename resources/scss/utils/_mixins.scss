/**
 * Main SCSS file for mixins
 * Author: OnxCode76
 */

@use './../utils/variables' as var;

/* Mixins */

/* Mobile First */
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (min-width: var.$breakpoint-xs) {
      @content;
    }
  } @else if $breakpoint == sm {
    @media (min-width: var.$breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (min-width: var.$breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (min-width: var.$breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (min-width: var.$breakpoint-xl) {
      @content;
    }
  } @else if $breakpoint == xxl {
    @media (min-width: var.$breakpoint-xxl) {
      @content;
    }
  }
}

/* Desktop First */
@mixin respond-max($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: var.$breakpoint-xs) {
      @content;
    }
  } @else if $breakpoint == sm {
    @media (max-width: var.$breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (max-width: var.$breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (max-width: var.$breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (max-width: var.$breakpoint-xl) {
      @content;
    }
  } @else if $breakpoint == xxl {
    @media (max-width: var.$breakpoint-xxl) {
      @content;
    }
  }
}

/* Background Overlay */
@mixin bg-overlay($opacity: 0.6, $color: var.$black) {
  position: absolute;
  height: 100%;
  width: 100%;
  right: 0;
  bottom: 0;
  left: 0;
  top: 0;
  opacity: $opacity;
  background-color: $color;
}

/* Text styles */
$custom-text-colors: (
  'primary': var.$primary,
  'secondary': var.$secondary,
  'success': var.$success,
  'warning': var.$warning,
  'danger': var.$danger,
  'white': var.$white,
  'muted': var.$text-muted,
);

@each $name, $color in $custom-text-colors {
  .text-#{$name} {
    color: $color;
  }
}

/* Buttons styles */
@mixin button-style($text-color, $bg-color, $hover-bg-color, $hover-shadow: 5px 5px 5px rgba(0, 0, 0, 0.3)) {
  color: $text-color;
  background-color: $bg-color;
  box-shadow: none;
  transition: background-color 0.3s ease, box-shadow 0.3s ease;

  &:hover {
    background-color: $hover-bg-color;
    box-shadow: $hover-shadow;
  }
}

